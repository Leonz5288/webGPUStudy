name: Test
on:
  release:
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#release
    types: [published]
    #  schedule:
    #    - cron: "*/5 * * * *"

jobs:
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          [ -z "${{ github.event.action }}" ] && matrix="[{\"with_cc\":\"OFF\",\"python\":\"3.8\"}]"
          [ -z "${{ github.event.action }}" ] || matrix="[{\"with_cc\":\"OFF\",\"python\":\"3.6\"},{\"with_cc\":\"OFF\",\"python\":\"3.7\"},{\"with_cc\":\"OFF\",\"python\":\"3.8\"},{\"with_cc\":\"OFF\",\"python\":\"3.9\"}]"
          echo ::set-output name=matrix::{\"include\":$(echo $matrix)}\"

  build_and_upload_mac:
    name: Build and Upload (macOS only)
    needs: matrix_prep
    strategy:
      matrix: ${{ fromJson(needs.matrix_prep.outputs.matrix) }}
    runs-on: macos-latest
    steps:
      #      - name: skip three python versions for nightly
      #        run: |
      #          [ -z "${{ github.event.action }}" ] && [ "${{ matrix.python }}" != "3.8" ] && exit 1
      #
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: success
        run: |
          echo "SUCCESS"

  build_and_upload_windows:
    name: Build and Upload (Windows only)
    needs: matrix_prep
    strategy:
      matrix: ${{ fromJson(needs.matrix_prep.outputs.matrix) }}
    runs-on: windows-latest
    steps:
      #      - name: skip three python versions for nightly
      #        shell: powershell
      #        run: |
      #          if ([string]::IsNullOrEmpty("${{ github.event.action }}") -and "${{ matrix.python }}" -ne "3.8") {exit 1}
      #
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: success
        shell: powershell
        run: echo "SUCCESS"
